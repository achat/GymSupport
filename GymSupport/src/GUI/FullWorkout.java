package GUI;


import gym.User;
import gym.Exercise;
import gym.Trainer;
import middleware.PGClass;
import java.sql.ResultSet;
import java.util.List;
import java.util.ArrayList;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
import middleware.MiddlewarePostgreSQL;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vasilis
 */
public class FullWorkout extends javax.swing.JDialog {

    GymSupportUI mainFrame;
    private User currentUser;
    
    DefaultListModel expertiseListModel = new DefaultListModel();
    DefaultListModel workoutListModel = new DefaultListModel();
    DefaultListModel exerciseListModel = new DefaultListModel();
    
    DefaultComboBoxModel<String> trainerComboModel = new DefaultComboBoxModel<String>();
    /**
     * Creates new form FullWorkout
     */
    public FullWorkout(GymSupportUI mainFrame, boolean modal) {
        super(mainFrame, modal);
        this.mainFrame = mainFrame;
        currentUser = mainFrame.getCurrentUser();
        initComponents();
        this.setLocationRelativeTo(mainFrame);
        
        expertiseList.setModel(expertiseListModel);
        expertiseList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        for (String expertise : MiddlewarePostgreSQL.getInstance().getExpertise().keySet()) {
            expertiseListModel.addElement(expertise);
        }
        
        trainerCombo.setModel(trainerComboModel);
        
        workoutPlanList.setModel(workoutListModel);
        workoutPlanList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        
    }
    
    private List<Trainer> getTrainersByExpertise(String expertise) {
        
        List<Trainer> trainers = new ArrayList<>();
        try {
            ResultSet rs = PGClass.getInstance().executeSelectQuery("select trainer_code from trainer_expertise where expertise_code = '" + expertise + "'");
            while (rs.next()) {
                trainers.add(MiddlewarePostgreSQL.getInstance().getTrainers().get(rs.getString("trainer_code")));
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            System.out.println("DB Failure!");
             return trainers;
        }
        
        return trainers;
    }
    
    private List<String> getWorkoutByExpertise (String expertise) {
        List<String> workoutPlans = new ArrayList<>();
        try {
            ResultSet rs = PGClass.getInstance().executeSelectQuery("select workout_code from workout_expertise where expertise_code = '" + expertise + "'");
            while (rs.next()) {
                workoutPlans.add(MiddlewarePostgreSQL.getInstance().getWorkout().get(rs.getString("workout_code")));
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            System.out.println("DB Failure!");
            return workoutPlans;
        }
        return workoutPlans;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expertiseList = new javax.swing.JList<>();
        trainerCombo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        trainerProfileArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        workoutPlanList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        exercisesArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Workout Type:");

        expertiseList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                expertiseListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(expertiseList);

        trainerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainerComboActionPerformed(evt);
            }
        });

        trainerProfileArea.setColumns(20);
        trainerProfileArea.setLineWrap(true);
        trainerProfileArea.setRows(5);
        jScrollPane2.setViewportView(trainerProfileArea);

        jLabel2.setText("Workout Plan:");

        workoutPlanList.setToolTipText("");
        workoutPlanList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                workoutPlanListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(workoutPlanList);

        jLabel3.setText("Select Trainer:");

        exercisesArea.setColumns(20);
        exercisesArea.setRows(5);
        jScrollPane4.setViewportView(exercisesArea);

        jLabel4.setText("Exercises:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(trainerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane4))
                    .addComponent(jLabel4))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(trainerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void expertiseListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_expertiseListValueChanged
        // TODO add your handling code here:
        List<Trainer> trainers = getTrainersByExpertise(expertiseList.getSelectedValue());
        trainerComboModel.removeAllElements();
        for (Trainer tr : trainers) {
            trainerComboModel.addElement(tr.getCode());
        }
        
        List<String> workoutPlans = getWorkoutByExpertise(expertiseList.getSelectedValue());
        workoutListModel.removeAllElements();
        for (String wp : workoutPlans) {
            workoutListModel.addElement(wp);
        }
        
        
        
    }//GEN-LAST:event_expertiseListValueChanged

    private void trainerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainerComboActionPerformed
        // TODO add your handling code here:
        Trainer tr = MiddlewarePostgreSQL.getInstance().getTrainers().get(trainerCombo.getSelectedItem());
        if (tr == null) {
            return;
        }
        String s = "Hi " + mainFrame.getCurrentUser().getName() + ", I am " + tr.getName() + ",\n\n";
        s += tr.getProfile();
        trainerProfileArea.setText(s);
    }//GEN-LAST:event_trainerComboActionPerformed

    private void workoutPlanListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_workoutPlanListValueChanged
        // TODO add your handling code here:
      exercisesArea.removeAll();
      exercisesArea.setText(getExerciseByName(workoutPlanList.getSelectedValue()).getComments());
    }//GEN-LAST:event_workoutPlanListValueChanged
 private Exercise getExerciseByName(String ename)
 {
     Exercise exer=new Exercise(0,"0",workoutPlanList.getSelectedValue(),workoutPlanList.getSelectedValue(),"You need to do "+workoutPlanList.getSelectedValue()+" twice a day for 15 minutes");
     return exer;
 }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FullWorkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FullWorkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FullWorkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FullWorkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FullWorkout dialog = new FullWorkout((GymSupportUI) new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea exercisesArea;
    private javax.swing.JList<String> expertiseList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JComboBox<String> trainerCombo;
    private javax.swing.JTextArea trainerProfileArea;
    private javax.swing.JList<String> workoutPlanList;
    // End of variables declaration//GEN-END:variables
}
